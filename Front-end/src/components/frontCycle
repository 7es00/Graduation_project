<!-- quize 

import React from "react";
import { useNavigate } from "react-router-dom";
import { useUser } from "./UserContext";
import styles from "../styles/home/master.module.css";
import { Link } from "react-router-dom";

import "../styles/stack/quizeBox.css"

function QuizBtn({ data }) {
    let navigate = useNavigate();

    const { user } = useUser(); // Access the user object from the context

    const userId = user.userId;
    // Extract the user ID from the user object
    const handleButtonClick = (level) => {
        navigate("/quizzes", { state: { name: data, level: level } });
    };

    // Only render buttons if userId is provided
    if (!userId) {
        return (
            <div className={styles.quizContainer}>
                <h1 className={styles.LoginRequestQuiz}>
                    Please<Link to="/#form">Login</Link> to join Quiz
                </h1>
            </div>
        );
    }

    return (
        <>
            <div className={styles.quizContainer}>
                <div className={styles.MainTextdiv}>Choose Your {data} Quiz level</div>
                <div className={styles.QuizContainerCenter}>
                    <button
                        className={styles.css_button_sliding_to_left_green}
                        type="button"
                        onClick={() => handleButtonClick("Beginner")}
                    >
                        Beginner{" "}
                    </button>
                    <button
                        className={styles.css_button_sliding_to_left_green}
                        type="button"
                        onClick={() => handleButtonClick("Advanced")}
                    >
                        Advanced{" "}
                    </button>
                    <button
                        className={styles.css_button_sliding_to_left_green}
                        type="button"
                        onClick={() => handleButtonClick("Intermediate")}
                    >
                        Intermediate{" "}
                    </button>
                </div>
            </div>
        </>
    );
}

export default QuizBtn; -->


<!-- websits

import React from "react";
import Freepik from "../assests/imgs/freepik.png";
import Pexels from "../assests/imgs/pexels.png";
import Flaticon from "../assests/imgs/flaticon.png";
import coolors from "../assests/imgs/coolors.png";
import styles from "../front.module.css";

const websitesData = [
  {
    name: "Freepik.com",
    details:
      "Provide free Picture with high-quality ,designers in PNG, SVG, EPS, PSD and CSS formats.",
    link: "https://www.freepik.com/",
    imgSrc: Freepik,
  },
  {
    name: "Pexels.com",
    details:
      "Provide free Picture with high-quality ,designers in PNG, SVG, EPS, PSD and CSS formats.",
    link: "https://www.pexels.com/",
    imgSrc: Pexels,
  },
  {
    name: "Flaticon.com",
    details:
      "Provide free Picture with high-quality ,designers in PNG, SVG, EPS, PSD and CSS formats.",
    link: "https://www.flaticon.com/",
    imgSrc: Flaticon,
  },
  {
    name: "coolors.com",
    details:
      "Provide free Picture with high-quality ,designers in PNG, SVG, EPS, PSD and CSS formats.",
    link: "https://coolors.co/",
    imgSrc: coolors,
  },
];

const RecommendedWebsite = ({ websites }) => {
  return (
    <div className="container">
      <div className="row">
        <div className="col-12">
          <div className="fs-1 text-center my-5">Recommended websites</div>
        </div>
      </div>
      <div className={`${styles.websiteSwiper} row overflow-hidden `}>
        <swiper-container
          space-between="10"
          slides-per-view="3"
          pagination="true"
        >
          {websites.map((website, index) => (
            <swiper-slide className="swiper-slide col-4">
              <div
                className={`${styles.websiteBox} websiteBox overflow-hidden`}
                key={index}
              >
                <div className={`${styles.imgBox}`}>
                  <img src={website.image} alt="" />
                </div>
                <div className="container">
                  <div className={`${styles.name} my-2 text-center`}>
                    {website.name}
                  </div>
                  <div className={`${styles.hint} px-3`}>{website.details}</div>
                  <div className="text-center ">
                    <a href={website.link}>
                      <button
                        className={`${styles.websitesButtons} text-center`}
                      >
                        visit
                      </button>
                    </a>
                  </div>
                </div>
              </div>
            </swiper-slide>
          ))}
        </swiper-container>
      </div>
    </div>
  );
};

export default RecommendedWebsite;

-->
<!-- programs 




    import React from "react";
import styles from "../front.module.css";

const RecommendedPrograms = ({ programs }) => {
  return (
    <div
      className={`recommendedProgram container overflow-hidden ${styles.recommendedProgram}`}
    >
      <div className="container">
        <h1 className={`fs-1 text-center py-md-4 ${styles.heading}`}>
          Recommended Programs
        </h1>
        <div className="row">
          <div className={`programBox col-10 ${styles.programBox}`}>
            <div
              className={`swiper-container mySwiper ${styles.swiperContainer}`}
            >
              <div className={`swiper-wrapper ${styles.swiperWrapper}`}>
                {programs.map((program) => (
                  <div className={`swiper-slide col-4 ${styles.program}`}>
                    <div className={`columns ${styles.columns}`}>
                      <ul className={`${styles.program}`}>
                        <li className={`${styles.header}`}>
                          {program.name}
                        </li>
                        <li className={`${styles.grey}`}>{program.status}</li>
                        {program.features.split('|').map(feature => (
                            <li>{feature}</li>
                        ))}
                        <li className={`${styles.grey}`}>
                          <a href={program.link}>
                            <div
                              className={`button ${styles.button}`}
                              data-tooltip="Size : 20Mb"
                            >
                              <div className={`${styles.buttonWrapper}`}>
                                <div className={`${styles.text}`}>Download</div>
                                <span className={`${styles.icon}`}>
                                  <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    aria-hidden="true"
                                    role="img"
                                    width="2em"
                                    height="2em"
                                    preserveAspectRatio="xMidYMid meet"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      fill="none"
                                      stroke="currentColor"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth="2"
                                      d="M12 15V3m0 12l-4-4m4 4l4-4M2 17l.621 2.485A2 2 0 0 0 4.561 21h14.878a2 2 0 0 0 1.94-1.515L22 17"
                                    ></path>
                                  </svg>
                                </span>
                              </div>
                            </div>
                          </a>
                        </li>
                      </ul>
                    </div>
                  </div>
                ))}
              </div>
              <div
                className={`swiper-pagination ${styles.swiperPaginationBullet}`}
              ></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RecommendedPrograms;




    \
-->


<!-- templates


import template1Screenshot1 from "../assests/template1/Screenshot_1.png";
import template1Screenshot2 from "../assests/template1/Screenshot_2.png";
import template1Screenshot3 from "../assests/template1/Screenshot_3.png";
import template1Screenshot4 from "../assests/template1/Screenshot_4.png";
import template2Screenshot1 from "../assests/template2/Screenshot_1.png";
import template2Screenshot2 from "../assests/template2/Screenshot_2.png";
import template2Screenshot3 from "../assests/template2/Screenshot_3.png";
import template2Screenshot4 from "../assests/template2/Screenshot_4.png";
import template3Screenshot1 from "../assests/template3/Screenshot_1.png";
import template3Screenshot2 from "../assests/template3/Screenshot_2.png";
import template3Screenshot3 from "../assests/template3/Screenshot_3.png";
import template3Screenshot4 from "../assests/template3/Screenshot_4.png";
import template4Screenshot1 from "../assests/template4/Screenshot_1.png";
import template4Screenshot2 from "../assests/template4/Screenshot_2.png";
import template4Screenshot3 from "../assests/template4/Screenshot_3.png";
import template4Screenshot4 from "../assests/template4/Screenshot_4.png";
import styles from "../front.module.css";

import React, { useEffect } from "react";
import Swiper from "swiper";
import mixitup from "mixitup";

export const Templates = ({ templatesData }) => {
  // animation
  useEffect(() => {
    // Initialize Swiper
    const swiper = new Swiper(".mySwiper", {
      slidesPerView: 3,
      spaceBetween: 30,
      freeMode: true,
      pagination: {
        el: ".swiper-pagination",
        clickable: true,
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });

    // Initialize Mixitup
    const mixer = mixitup(".TemplateContent");

    // Clean up on component unmount
    return () => {
      // swiper.destroy();
      mixer.destroy();
    };
  }, []);

  return (
    <div className={`container-fluid ${styles.container}`}>
      <div className="row">
        <div className="col-12">
          <div className={styles.Templates}>
            <div className={`${styles.head} ${styles.centerElement}`}>
              Template To build
            </div>
            <div className={`${styles.TemplateContent} TemplateContent`}>
              <div className={styles.templateHeader}>
                {templatesData.map((template) => (
                  <button
                    type="button"
                    className={`templateButton ${styles.templateButton}`}
                    data-filter={`.template-${template.id}`}
                  >
                    {template.name}
                  </button>
                ))}
              </div>
              <div className={styles.templateImgs}>
                {templatesData.map((template) => (
                  <div className={styles.firstTemplate}>
                    {template.image.split("|").map((image) => (
                      <img
                        src={image}
                        className={`mix template-${template.id} ${styles.mix}`}
                        alt=""
                      />
                    ))}
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

-->


<!-- 
    certifcation 




    <div className={`${styles.certifcationSection} container-fluid mx-auto`}>
        <div className="row d-flex justify-content-between">
          <div className="col-xl-3">
            <div className={styles.certificationDescription}>
              <div
                className={`${styles.CertificationPayment} ${styles.coloredText}`}
              >
                certifications
              </div>
              <div className={styles.certificationDetails}>
                we recommend to you this certifications to get a high level and
                help to get Interesting informations
              </div>
            </div>
          </div>
          <div className="col-xl-8 col-md-11 col-sm-12">
            <div
              style={{ height: "100%" }}
              className={styles.certificationBox + " overflow-hidden"}
            >
              <swiper-container
                style={{ height: "100%" }}
                slides-per-view="2"
                pagination="true"
                navigation="true"
              >
                {data &&
                  data.certifications &&
                  data.certifications.map((certification, index) => (
                    // <div className={styles.swiperSlide} key={index}>
                    <swiper-slide>
                      <a
                        style={{ display: "flex", justifyContent: "center" }}
                        href={certification.link}
                      >
                        <img
                          src={certification.image}
                          alt=""
                          style={{
                            width: "366.5px",
                            height: "208px",
                            objectFit: "cover",
                          }}
                          className="border border-dark rounded-3"
                        />
                      </a>
                    </swiper-slide>
                    // </div>
                  ))}
              </swiper-container>
            </div>
          </div>
        </div>
      </div>
 -->

// documetnaion
import React from "react";
import styles from "../front.module.css";

const Documents = ({ documentsData }) => {
  return (

    <div className={`container-fluid ${styles.documentationSection}`}>
      <div className={`row ${styles.documentationContainer}`}>


 <div className="col-12 text-center">
          <h1 className={`${styles.coloredText} my-5`}>Documentation</h1>
          <p className="my-5">
            we highly recommend for you this documentation that will help you to
            improve your level and help you to increase your productivity
          </p>
        </div>
        <div className={`col-9 ${styles.swiperContainer}`}>
          {/* <div className={`swiper-container ${styles.mySwiper} overflow-hidden`}> */}
          <swiper-container
            space-between="10"
            slides-per-view="3"
            pagination="true"
            className={`swiper-container ${styles.mySwiper} overflow-hidden`}
          >
            {/* <div className="swiper-wrapper"> */}
            {documentsData &&
              documentsData.map((document) => (
                <swiper-slide
                  className={`swiper-slide col-4 ${styles.swiperSlide}`}
                >
                  <div className={styles.documentationBox}>
                    <div className={styles.img + " mt-3"}>
                      <img
                        className={`${styles.img} w-100 h-100 object-fit-cover`}
                        src={document.image}
                        alt={document.name}
                      />
                    </div>
                    <div className={`${styles.documentationName} my-3`}>
                        {document.name}
                    </div>
                    <div className={styles.documentationDetails}>
                      {document.short_description}
                    </div>
                    <button onClick={() => window.open(document.link, '_self')} className={styles.documentationButton}>
                      visit me
                    </button>
                  </div>
                </swiper-slide>
              ))}
            {/* </div> */}
            <div
              className={`swiper-pagination ${styles.swiperPagination}`}
            ></div>
          </swiper-container>
          {/* </div> */}
        </div>
      </div>
    </div>
  );
};
export default Documents;



time line
import React from "react";
import { Link } from "react-router-dom";

import styles from "../front.module.css";

export const TimelineComponent = ({ trackName, trackDescription, trackLevel, technologies }) => {
  const trackLevelName = 'level' + trackLevel.toLowerCase();

  return (
    <div className={styles.Timeline}>
      <div className={styles.TimelineHead}>
          <span className={`${styles.levelCard} ${styles[trackLevelName]}`}>{trackLevel}</span>
          <div className={styles.centerElement}>{trackName}</div>
      </div>
      <div className={styles.hint}>{trackDescription}</div>
      <div className={styles.TimelineContainer}>
        {technologies && technologies.map((item, index) => (
          <div className={styles.TimelineBox} key={index}>
            <div className={styles.TimelineCircle}>{index + 1}</div>
            <div className={styles.TimelineContent}>
              <div className={styles.TimelineContentName}>{item.name}</div>
              <div className={styles.TimelineContentDetails}>
                {item.short_description}
              </div>
              <Link to={`/technologies/${item.id}`} className={styles.TimelineContentButton}>
                <button>learn now</button>
              </Link>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

//

<div className={styles.bodyContainer}>
        <div
          className={`${styles.trackName} ${styles.centerElement} ${styles.coloredText}`}
        >
          {data && data.name}
        </div>
        {data &&
          data.tracks &&
          data.tracks.map((track, index) => (
            <TimelineComponent
              key={index}
              trackName={track.name}
              trackDescription={track.description}
              trackLevel={track.level}
              technologies={track.technologies}
              className={styles.timelineComponent} // Apply the appropriate class name
            />
          ))}
      </div>
